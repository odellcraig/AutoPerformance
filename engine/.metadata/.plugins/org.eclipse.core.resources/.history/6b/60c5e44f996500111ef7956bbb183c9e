'''
@author: codell
'''

import commands

class AutoPerformanceEngine(object):
    '''
    classdocs
    '''

    def __init__(self, _time, _frameSize, _dscp, _numStreams, _host):
        '''
        Constructor - pass in configuration
        '''
        self.time = _time
        self.frameSize = _frameSize
        self.dscp = _dscp
        self.numStreams = _numStreams
        self.host = _host
        pass
    
    
    def startServer(self):
        result = commands.getstatus('ps -e |grep "thrulayd')
        print "Results of grep was:",result
        if result:
            commands.getstatus('thrulayd')
            
            
    def stopSerrver(self):
        result = commands.getstatus('killall lt-thrulayd')
        goodness = (result == 0)
        print "Result of stop server command success = ", goodness
    
    
    def runUdp(self, rateString):
        #Run the UDP version of the test
        output = commands.getoutput('ls');
        lines  = output.split("\n");
        for line in lines:
            print "Line = ", line
            
    
    
    def runTcp(self):
        #Run the system command and grab output
        #Parse output
        tcpCommand = 'thrulay -t' + str(self.time)
        tcpCommand += ' -D' + str(self.dscp)
        tcpCommand += ' -m' + str(self.numStreams)
        tcpCommand += ' ' + self.host
        print "Running (", tcpCommand,")"
        output = commands.getoutput(tcpCommand);
        lines  = output.split("\n");
        for line in lines:
            print "Line = ", line

        
    
if __name__ == "__main__":
    print "Hello Python"
    engine = AutoPerformanceEngine(5,1518,0,1,"localhost")
    engine.runUdp("100M")
    print "Now running TCP:"
    engine.runTcp()